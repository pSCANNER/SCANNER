<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring"      
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- 
        The following sslContextParameters block is used to configure SSL 
        authentication.  Any route which references this object id via the URI 
        parameter "sslContextParametersRef=sslContextParameters" will use this 
        configuration.
        
        Note that at this time the BaseRecipientList class of the Master service
        is hardcoded to reference the globally declared bean "sslContextParameters" 
        below.  However, the actual parameters used to configure the SSL Context
        may be edited via the master.properties configuration file, so the 
        addition of other sslContextParameters should not be necessary.
    -->       
    <camel:sslContextParameters id="sslContextParameters">
      <camel:keyManagers 
            id="master.keyManagerParameters"
            camelContextId="masterCamelContext"
            keyPassword="{{master.keyManagerParameters.password}}">          
        <camel:keyStore 
            id="master.keyStoreParameters"
            camelContextId="masterCamelContext"
            type="{{master.keyStoreParameters.type}}"
            resource="{{master.keyStoreParameters.resource}}"
            password="{{master.keyStoreParamerers.password}}"/>
      </camel:keyManagers>
      <camel:trustManagers>
        <camel:keyStore  
            id="master.trustStoreParameters"
            camelContextId="masterCamelContext"            
            type="{{master.trustStoreParameters.type}}"
            resource="{{master.trustStoreParameters.resource}}"
            password="{{master.trustStoreParamerers.password}}"/>
      </camel:trustManagers>
      <camel:serverParameters clientAuthentication="REQUIRE"/>
    </camel:sslContextParameters>
    
    <!-- 
         The following bean definitions are used for SSL certificate-based 
         authorization in Jetty via JAAS.  They should not be modified unless 
         the Jetty JAAS LoginModule is being replaced with a different 
         authorization mechanism (e.g., user-based LDAP).
    -->
    <bean id="loginService" 
          class="org.eclipse.jetty.plus.jaas.JAASLoginService">
        <property name="name" value="CertLogin"/>
        <property name="loginModuleName" value="CertLogin"/>
        <property name="identityService" ref="identityService"/>       
    </bean>  
        
    <bean id="identityService" 
          class="org.eclipse.jetty.security.DefaultIdentityService"/> 
        
    <bean id="constraint" 
          class="org.eclipse.jetty.http.security.Constraint">
        <property name="name" value="CLIENT_CERT"/>
        <property name="roles" value="authorized"/>
        <property name="authenticate" value="true"/>
    </bean>

    <bean id="constraintMapping" 
          class="org.eclipse.jetty.security.ConstraintMapping">
        <property name="constraint" ref="constraint"/>
        <property name="pathSpec" value="/*"/>
    </bean> 
    
    <bean id="securityHandler" 
          class="org.eclipse.jetty.security.ConstraintSecurityHandler">
        <property name="authenticator">
            <bean class="org.eclipse.jetty.security.authentication.ClientCertAuthenticator"/>
        </property>
        <property name="constraintMappings">
            <list>
                <ref bean="constraintMapping"/>
            </list>
        </property>
        <property name="loginService" ref="loginService"/>    
        <property name="strict" value="true"/>
    </bean>
         
</beans>